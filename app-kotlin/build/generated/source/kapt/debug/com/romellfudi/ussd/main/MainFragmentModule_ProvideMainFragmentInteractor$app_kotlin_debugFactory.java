// Generated by Dagger (https://dagger.dev).
package com.romellfudi.ussd.main;

import com.romellfudi.ussd.main.interactor.MainFragmentInteractor;
import com.romellfudi.ussd.main.interactor.MainFragmentMVPInteractor;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainFragmentModule_ProvideMainFragmentInteractor$app_kotlin_debugFactory implements Factory<MainFragmentMVPInteractor> {
  private final MainFragmentModule module;

  private final Provider<MainFragmentInteractor> interactorProvider;

  public MainFragmentModule_ProvideMainFragmentInteractor$app_kotlin_debugFactory(
      MainFragmentModule module, Provider<MainFragmentInteractor> interactorProvider) {
    this.module = module;
    this.interactorProvider = interactorProvider;
  }

  @Override
  public MainFragmentMVPInteractor get() {
    return provideMainFragmentInteractor$app_kotlin_debug(module, interactorProvider.get());
  }

  public static MainFragmentModule_ProvideMainFragmentInteractor$app_kotlin_debugFactory create(
      MainFragmentModule module, Provider<MainFragmentInteractor> interactorProvider) {
    return new MainFragmentModule_ProvideMainFragmentInteractor$app_kotlin_debugFactory(module, interactorProvider);
  }

  public static MainFragmentMVPInteractor provideMainFragmentInteractor$app_kotlin_debug(
      MainFragmentModule instance, MainFragmentInteractor interactor) {
    return Preconditions.checkNotNull(instance.provideMainFragmentInteractor$app_kotlin_debug(interactor), "Cannot return null from a non-@Nullable @Provides method");
  }
}
