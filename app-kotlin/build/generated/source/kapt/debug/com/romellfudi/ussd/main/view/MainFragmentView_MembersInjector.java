// Generated by Dagger (https://dagger.dev).
package com.romellfudi.ussd.main.view;

import com.romellfudi.permission.PermissionService;
import com.romellfudi.ussd.main.interactor.MainFragmentMVPInteractor;
import com.romellfudi.ussd.main.presenter.MainFragmentMVPPresenter;
import com.romellfudi.ussdlibrary.USSDApi;
import dagger.MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainFragmentView_MembersInjector implements MembersInjector<MainFragmentView> {
  private final Provider<USSDApi> ussdApiProvider;

  private final Provider<PermissionService> permissionServiceProvider;

  private final Provider<MainFragmentMVPPresenter<MainFragmentMVPView, MainFragmentMVPInteractor>> mainFragmentMVPPresenterProvider;

  public MainFragmentView_MembersInjector(Provider<USSDApi> ussdApiProvider,
      Provider<PermissionService> permissionServiceProvider,
      Provider<MainFragmentMVPPresenter<MainFragmentMVPView, MainFragmentMVPInteractor>> mainFragmentMVPPresenterProvider) {
    this.ussdApiProvider = ussdApiProvider;
    this.permissionServiceProvider = permissionServiceProvider;
    this.mainFragmentMVPPresenterProvider = mainFragmentMVPPresenterProvider;
  }

  public static MembersInjector<MainFragmentView> create(Provider<USSDApi> ussdApiProvider,
      Provider<PermissionService> permissionServiceProvider,
      Provider<MainFragmentMVPPresenter<MainFragmentMVPView, MainFragmentMVPInteractor>> mainFragmentMVPPresenterProvider) {
    return new MainFragmentView_MembersInjector(ussdApiProvider, permissionServiceProvider, mainFragmentMVPPresenterProvider);}

  @Override
  public void injectMembers(MainFragmentView instance) {
    injectUssdApi(instance, ussdApiProvider.get());
    injectPermissionService(instance, permissionServiceProvider.get());
    injectMainFragmentMVPPresenter(instance, mainFragmentMVPPresenterProvider.get());
  }

  public static void injectUssdApi(MainFragmentView instance, USSDApi ussdApi) {
    instance.ussdApi = ussdApi;
  }

  public static void injectPermissionService(MainFragmentView instance,
      PermissionService permissionService) {
    instance.permissionService = permissionService;
  }

  public static void injectMainFragmentMVPPresenter(MainFragmentView instance,
      MainFragmentMVPPresenter<MainFragmentMVPView, MainFragmentMVPInteractor> mainFragmentMVPPresenter) {
    instance.mainFragmentMVPPresenter = mainFragmentMVPPresenter;
  }
}
